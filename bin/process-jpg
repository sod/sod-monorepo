#!/bin/bash

EXECUTABLE_CONVERT=$(command -v convert)
EXECUTABLE_MOZJPEG_CHECK=$(brew ls --versions mozjpeg)
EXECUTABLES="${EXECUTABLE_CONVERT}${EXECUTABLE_MOZJPEG_CHECK}"
QUALITY_1X="60"
QUALITY_2X="75"

if [[ "" == "${EXECUTABLES}" ]]; then
    if [[ "" == "${EXECUTABLE_CONVERT}" ]]; then
        echo "Error: Program 'convert' missing. Please install via 'brew install imagemagick'"
    fi
    if [[ "" == "${EXECUTABLE_MOZJPEG_CHECK}" ]]; then
        echo "Error: Program 'cjpeg' missing. Please install via 'brew install mozjpeg'"
    fi
    exit 1
fi

MOZJPEG_BIN_FOLDER="$(brew --cellar mozjpeg)/$(brew list --versions mozjpeg | tr ' ' '\n' | tail -1)"
EXECUTABLE_CJPEG="${MOZJPEG_BIN_FOLDER}/bin/cjpeg"
EXECUTABLE_JPEGTRAN="${MOZJPEG_BIN_FOLDER}/bin/jpegtran"


for i in "$@"
do
case $i in
    --quality-1x=*|-q1x=*)
        QUALITY_1X="${i#*=}"
    shift ;;
    --quality-2x=*|-q2x=*)
        QUALITY_2X="${i#*=}"
    shift ;;
    *) ;;
esac
done

processFile() {
    SOURCE="$1"
    FILENAME=$(basename -- "${SOURCE}")

    DIR=$(dirname -- "${SOURCE}")
    EXT="${FILENAME##*.}"
    FILE="${FILENAME%.*}"
    FILE="${FILE%*@2x}"
    FILE="${FILE%*@1x}"

#    echo "convert \"${SOURCE}\" -resize 62.5% pnm:- | ${EXECUTABLE_CJPEG} -optimize -quality ${QUALITY_1X} -quant-table 3 | ${EXECUTABLE_JPEGTRAN} -copy none -optimize -outfile \"${DIR}/${FILE}@1x.jpg\";"
#    echo "convert \"${SOURCE}\" pnm:- | ${EXECUTABLE_CJPEG} -optimize -quality ${QUALITY_2X} -quant-table 3 | ${EXECUTABLE_JPEGTRAN} -copy none -optimize -outfile \"${DIR}/${FILE}@2x.jpg\";"

    ALPHA_TO_WHITE="-background white -alpha remove -alpha off"

    echo "convert \"${SOURCE}\" ${ALPHA_TO_WHITE} pnm:- | ${EXECUTABLE_CJPEG} -optimize -quality ${QUALITY_1X} -quant-table 3 | ${EXECUTABLE_JPEGTRAN} -copy none -optimize -outfile \"${DIR}/${FILE}.jpg\";"
}

if [ -p /dev/stdin ]; then
    while IFS= read line; do
            processFile "${line}"
    done
else
    if [ -f "$1" ]; then
            processFile "${1}"
    else
        echo "This script converts the input of files into a command to generate 1x & 2x images"
        echo
        echo "Options:"
        echo "  --quality-1x=<number>, -q1x=<number>       change @1x jpg quality in percent (default ${QUALITY_1X})"
        echo "  --quality-2x=<number>, -q2x=<number>       change @2x jpg quality in percent (default ${QUALITY_2X})"
        echo
        echo "Usage:"
        echo
        echo "Pipe:"
        echo "  find web/images/foo -type f | ../bin/process-image"
        echo
        echo "Argument:"
        echo "  ../bin/process-image web/images/foo/bar.jpg"
    fi
fi